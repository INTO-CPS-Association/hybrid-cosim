model PW_PowerSystem
  Modelica.Electrical.Machines.BasicMachines.DCMachines.DC_ElectricalExcited motor annotation(Placement(visible = true, transformation(origin = {-8, -4}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Electrical.Analog.Basic.Ground voltage_ground annotation(Placement(visible = true, transformation(origin = {-70, -34}, extent = {{-10, -10}, {10, 10}}, rotation = -90)));
  parameter Modelica.Electrical.Machines.Utilities.ParameterRecords.DcElectricalExcitedData motor_parameters annotation(Placement(visible = true, transformation(origin = {-4, -30}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Mechanics.Rotational.Components.Inertia inertia annotation(Placement(visible = true, transformation(origin = {28, -4}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Electrical.Analog.Ideal.IdealClosingSwitch up_switch annotation(Placement(visible = true, transformation(origin = {-12, 60}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Electrical.Analog.Sources.ConstantVoltage dc_motor_power annotation(Placement(visible = true, transformation(origin = {-48, -8}, extent = {{-10, -10}, {10, 10}}, rotation = -90)));
  Modelica.Electrical.Analog.Sources.ConstantVoltage up_voltage(V = 12) annotation(Placement(visible = true, transformation(origin = {-62, 48}, extent = {{-10, -10}, {10, 10}}, rotation = -90)));
  Modelica.Electrical.Analog.Basic.Ground up_ground annotation(Placement(visible = true, transformation(origin = {-90, 24}, extent = {{-10, -10}, {10, 10}}, rotation = -90)));
  Modelica.Blocks.Logical.GreaterThreshold convertToBoolean(threshold = 0.5) annotation(Placement(visible = true, transformation(origin = {-48, 84}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Logical.GreaterThreshold greaterThreshold1(threshold = 0.5) annotation(Placement(visible = true, transformation(origin = {50, 84}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
  Modelica.Electrical.Analog.Ideal.IdealClosingSwitch down_switch annotation(Placement(visible = true, transformation(origin = {18, 60}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
  Modelica.Electrical.Analog.Basic.Ground down_ground annotation(Placement(visible = true, transformation(origin = {86, 18}, extent = {{-10, 10}, {10, -10}}, rotation = -90)));
  Modelica.Electrical.Analog.Sources.ConstantVoltage down_voltage(V = 12) annotation(Placement(visible = true, transformation(origin = {76, 46}, extent = {{-10, 10}, {10, -10}}, rotation = -90)));
  Modelica.Electrical.Analog.Ideal.IdealClosingSwitch up_switch_ground annotation(Placement(visible = true, transformation(origin = {-32, 24}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Electrical.Analog.Ideal.IdealClosingSwitch down_switch_ground annotation(Placement(visible = true, transformation(origin = {34, 18}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
  input Modelica.Blocks.Interfaces.RealInput up_input annotation(Placement(visible = true, transformation(origin = {-96, 84}, extent = {{-20, -20}, {20, 20}}, rotation = 0), iconTransformation(origin = {-68, 60}, extent = {{-20, -20}, {20, 20}}, rotation = 0)));
  input Modelica.Blocks.Interfaces.RealInput down_input annotation(Placement(visible = true, transformation(origin = {90, 84}, extent = {{20, -20}, {-20, 20}}, rotation = 0), iconTransformation(origin = {-68, 0}, extent = {{-20, -20}, {20, 20}}, rotation = 0)));
  output Modelica.Blocks.Interfaces.RealOutput angle annotation(Placement(visible = true, transformation(origin = {94, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {70, 30}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  input Modelica.Blocks.Interfaces.RealInput input_torque annotation(Placement(visible = true, transformation(origin = {100, -56}, extent = {{20, -20}, {-20, 20}}, rotation = 0), iconTransformation(origin = {-68, -60}, extent = {{-20, -20}, {20, 20}}, rotation = 0)));
  Modelica.Mechanics.Rotational.Sensors.AngleSensor angleSensor1 annotation(Placement(visible = true, transformation(origin = {60, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Mechanics.Rotational.Sources.Torque torque1 annotation(Placement(visible = true, transformation(origin = {62, -56}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
  Modelica.Mechanics.Rotational.Sensors.SpeedSensor speedSensor1 annotation(Placement(visible = true, transformation(origin = {60, -22}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  output Modelica.Blocks.Interfaces.RealOutput speed annotation(Placement(visible = true, transformation(origin = {94, -22}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {70, -30}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
equation
  connect(inertia.flange_b, speedSensor1.flange) annotation(Line(points = {{38, -4}, {50, -4}, {50, -22}, {50, -22}}));
  connect(speedSensor1.w, speed) annotation(Line(points = {{72, -22}, {88, -22}, {88, -22}, {94, -22}}, color = {0, 0, 127}));
  connect(torque1.tau, input_torque) annotation(Line(points = {{74, -56}, {100, -56}}, color = {0, 0, 127}));
  connect(torque1.flange, inertia.flange_b) annotation(Line(points = {{52, -56}, {38, -56}, {38, -4}}));
  connect(angleSensor1.phi, angle) annotation(Line(points = {{72, 0}, {94, 0}}, color = {0, 0, 127}));
  connect(inertia.flange_b, angleSensor1.flange) annotation(Line(points = {{38, -4}, {50, -4}, {50, 0}, {50, 0}}));
  connect(down_input, greaterThreshold1.u) annotation(Line(points = {{90, 84}, {62, 84}, {62, 84}, {62, 84}}, color = {0, 0, 127}));
  connect(up_input, convertToBoolean.u) annotation(Line(points = {{-96, 84}, {-60, 84}}, color = {0, 0, 127}));
  connect(down_switch.n, motor.pin_an) annotation(Line(points = {{8, 60}, {4, 60}, {4, 36}, {-10, 36}, {-10, 6}, {-14, 6}}, color = {0, 0, 255}));
  connect(down_voltage.p, down_switch.p) annotation(Line(points = {{76, 56}, {76, 60}, {28, 60}}, color = {0, 0, 255}));
  connect(greaterThreshold1.y, down_switch.control) annotation(Line(points = {{40, 84}, {18, 84}, {18, 67}}, color = {255, 0, 255}));
  connect(greaterThreshold1.y, down_switch_ground.control) annotation(Line(points = {{40, 84}, {34, 84}, {34, 26}, {34, 26}}, color = {255, 0, 255}));
  connect(down_switch_ground.n, motor.pin_ap) annotation(Line(points = {{24, 18}, {-2, 18}, {-2, 6}, {-2, 6}, {-2, 6}}, color = {0, 0, 255}));
  connect(down_switch_ground.p, down_ground.p) annotation(Line(points = {{44, 18}, {76, 18}, {76, 18}, {76, 18}}, color = {0, 0, 255}));
  connect(convertToBoolean.y, up_switch_ground.control) annotation(Line(points = {{-36, 84}, {-32, 84}, {-32, 32}, {-32, 32}}, color = {255, 0, 255}));
  connect(up_switch_ground.p, up_ground.p) annotation(Line(points = {{-42, 24}, {-80, 24}, {-80, 24}, {-80, 24}}, color = {0, 0, 255}));
  connect(motor.pin_an, up_switch_ground.n) annotation(Line(points = {{-14, 6}, {-14, 6}, {-14, 24}, {-22, 24}, {-22, 24}}, color = {0, 0, 255}));
  connect(up_voltage.n, up_ground.p) annotation(Line(points = {{-62, 38}, {-62, 24}, {-80, 24}}, color = {0, 0, 255}));
  connect(up_voltage.p, up_switch.p) annotation(Line(points = {{-62, 58}, {-62, 60}, {-22, 60}}, color = {0, 0, 255}));
  connect(down_ground.p, down_voltage.n) annotation(Line(points = {{76, 18}, {76, 36}}, color = {0, 0, 255}));
  connect(convertToBoolean.y, up_switch.control) annotation(Line(points = {{-37, 84}, {-12, 84}, {-12, 68}}, color = {255, 0, 255}));
  connect(motor.flange, inertia.flange_a) annotation(Line(points = {{2, -4}, {18, -4}}));
  connect(motor.pin_ap, up_switch.n) annotation(Line(points = {{-2, 6}, {-2, 60}}, color = {0, 0, 255}));
  connect(motor.pin_en, voltage_ground.p) annotation(Line(points = {{-18, -10}, {-18, -34}, {-60, -34}}, color = {0, 0, 255}));
  connect(dc_motor_power.p, motor.pin_ep) annotation(Line(points = {{-48, 2}, {-18, 2}}, color = {0, 0, 255}));
  connect(dc_motor_power.n, voltage_ground.p) annotation(Line(points = {{-48, -18}, {-48, -18}, {-48, -34}, {-60, -34}, {-60, -34}}, color = {0, 0, 255}));
  annotation(Icon(coordinateSystem(extent = {{-100, -100}, {100, 100}}, preserveAspectRatio = true, initialScale = 0.1, grid = {2, 2})), Diagram(coordinateSystem(extent = {{-100, -100}, {100, 100}}, preserveAspectRatio = true, initialScale = 0.1, grid = {2, 2})), experiment(StartTime = 0, StopTime = 8, Tolerance = 0.0001, Interval = 0.004), uses(Modelica(version = "3.2.1")));
end PW_PowerSystem;